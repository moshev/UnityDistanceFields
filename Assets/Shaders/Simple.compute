#pragma kernel RaymarchMain
#pragma kernel DistanceMain
#define _DIST_FUNCTION _dist_xform_1
float _dist_xform_1(float3 p);
#include "RaymarchMainCompute.cginc"
StructuredBuffer<raycontext> _input;
RWStructuredBuffer<rayresult> _output;
[numthreads(128, 1, 1)]
void RaymarchMain(uint3 dispatchId : SV_DispatchThreadID)
{
    uint arrId = dispatchId.x;
    rayresult res;
    res = trace(_input[arrId]);
    _output[arrId] = res;
}
[numthreads(128, 1, 1)]
void DistanceMain(uint3 dispatchId : SV_DispatchThreadID)
{
    uint arrId = dispatchId.x;
    rayresult res;
    res.p = float3(0, 0, 0);
    res.n = float3(0, 0, 0);
    res.distance = distToObject(_input[arrId].p);
    _output[arrId] = res;
}
float3 _transform_1;

float _Width_1;

float _dist_1(float3 p) {
	float3 q = abs(p) - float3(_Width_1, _Width_1, _Width_1);
	return max(max(q.x, q.y), q.z);
}

float _dist_xform_1(float3 p) {
    return _dist_1(p - _transform_1);
}

